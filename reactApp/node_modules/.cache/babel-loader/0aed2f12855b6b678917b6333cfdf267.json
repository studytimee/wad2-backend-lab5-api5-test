{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abid001\\\\backend\\\\wad2-backend-lab4-api4-React\\\\reactApp\\\\src\\\\loginPage.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\nimport { Link } from \"react-router-dom\";\nimport { MoviesContext } from './moviesContext';\n\nconst LoginPage = props => {\n  const context = useContext(AuthContext);\n  const moviesContext = useContext(MoviesContext); //ADD THIS: create moviesContext constant\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    context.authenticate(email, password);\n  }; // Set 'from' to path where browser is redirected after a successful login.\n  // Either / or the protected path user tried to access.\n\n\n  const {\n    from\n  } = props.location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  if (context.isAuthenticated === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: from,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Login page\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"You must log in to view the protected pages \"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    placeholder: \"email\",\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Not Registered?\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Sign Up!\")));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/abid001/backend/wad2-backend-lab4-api4-React/reactApp/src/loginPage.js"],"names":["React","useContext","useState","Redirect","AuthContext","Link","MoviesContext","LoginPage","props","context","moviesContext","email","setEmail","password","setPassword","login","authenticate","from","location","state","pathname","isAuthenticated","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,OAAO,GAAGR,UAAU,CAACG,WAAD,CAA1B;AACA,QAAMM,aAAa,GAAGT,UAAU,CAACK,aAAD,CAAhC,CAFyB,CAEwB;;AACjD,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,KAAK,GAAG,MAAM;AAClBN,IAAAA,OAAO,CAACO,YAAR,CAAqBL,KAArB,EAA4BE,QAA5B;AACD,GAFD,CANyB,CAUzB;AACA;;;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWT,KAAK,CAACU,QAAN,CAAeC,KAAf,IAAwB;AAAEF,IAAAA,IAAI,EAAE;AAAEG,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAzC;;AAEA,MAAIX,OAAO,CAACY,eAAR,KAA4B,IAAhC,EAAsC;AACpC,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEJ,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFF,eAGE;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,WAAW,EAAC,OAA9B;AAAsC,IAAA,QAAQ,EAAEK,CAAC,IAAI;AACnDV,MAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALb,eAME;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,UAA1B;AAAqC,IAAA,WAAW,EAAC,UAAjD;AAA4D,IAAA,QAAQ,EAAEF,CAAC,IAAI;AACzER,MAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAQa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARb,eAUE;AAAQ,IAAA,OAAO,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAXF,CADF;AAgBD,CAjCD;;AAmCA,eAAeR,SAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from './authContext';\r\nimport { Link } from \"react-router-dom\";\r\nimport { MoviesContext } from './moviesContext'; \r\n\r\nconst LoginPage = props => {\r\n  const context = useContext(AuthContext)\r\n  const moviesContext = useContext(MoviesContext)  //ADD THIS: create moviesContext constant\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const login = () => {\r\n    context.authenticate(email, password);\r\n  };\r\n\r\n  // Set 'from' to path where browser is redirected after a successful login.\r\n  // Either / or the protected path user tried to access.\r\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\r\n\r\n  if (context.isAuthenticated === true) {\r\n    return <Redirect to={from} />;\r\n  }\r\n  return (\r\n    <>\r\n      <h2>Login page</h2>\r\n      <p>You must log in to view the protected pages </p>\r\n      <input id=\"email\" placeholder=\"email\" onChange={e => {\r\n        setEmail(e.target.value);\r\n      }}></input><br />\r\n      <input id=\"password\" type=\"password\" placeholder=\"password\" onChange={e => {\r\n        setPassword(e.target.value);\r\n      }}></input><br />\r\n      {/* Login web form  */}\r\n      <button onClick={login}>Log in</button>\r\n      <p>Not Registered?\r\n      <Link to=\"/signup\">Sign Up!</Link></p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}